name: Mainnet History Validation

on:
  repository_dispatch:
    types: [request-mainnet-history-validation]
  workflow_dispatch:
    inputs:
      os:
        description: Operating system that the jobs run on
        default: 'ubuntu-latest'
      version:
        description: chainweb-node version or revision that is used
        default: 'master'
      ghc_version:
        descritpion: GHC of the build that is used
        default: '8.10.2'


env:
  AWS_ACCESS_KEY_ID: ${{ secrets.kadena_cabal_cache_aws_access_key_id }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.kadena_cabal_cache_aws_secret_access_key }}
  AWS_DEFAULT_REGION: us-east-1

  S3_ARTIFACT_BUCKET: kadena-cabal-cache
  S3_ARTIFACT_FOLDER: chainweb-node

  DB_SNAPSHOT_URI: 's3://chainweb-chain-db/mainnet01/rocksdb/'

jobs:

  # Validate Mainnet01 Chain Database With chainweb-node
  #
  validate-headers:
    name: Validate headers
    runs-on: ${{ github.event.*.os[0] }}
    steps:
    - name: Install non-Haskell dependencies (ubuntu)
      if: contains(matrix.os, 'ubuntu')
      run: sudo apt-get install -y expect
    - name: Install non-Haskell dependencies (macOS)
      if: contains(matrix.os, 'mac')
      run: brew install expect
    - name: install chainweb-node
      uses: larskuhtz/install-chainweb-action@master
      with:
        ghc_version: ${{ github.event.*.ghc_version[0] }}
        version: ${{ github.event.*.version[0] }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check chainweb-node installation
      run: chainweb-node --version
    - name: Sync chain database from S3
      run: aws s3 sync "$DB_SNAPSHOT_URI" db/0/rocksDb --delete --exclude=LOCK
    - name: Write chainweb-node configuration file
      run: |
        cat >> config.yaml <<EOF
          databaseDirectory: "db"
          chainweb:
            chainwebVersion: mainnet01
            validateHashesOnReplay: false
            p2p:
              peer:
                hostaddress:
                  hostname: localhost
                  port: 4445
              private: true
              ignoreBootstrapNodes: true
            transactionIndex:
              enabled: false
            headerStream: false
            mempoolP2p:
              enabled: false
            cuts:
              pruneChainDatabase: headers-checked
          logging:
            telemetryBackend:
              enabled: false
            backend:
              handle: stdout
              color: "true"
            logger:
              log_level: info
              policy: block
            filter:
              rules:
              - key: component
                value: init
                level: info
              - key: component
                value: database-pruning
                level: info
              default: warn
        EOF
    - name: Validate block headers and check Merkle tree
      timeout-minutes: 60
      run: |
        unbuffer chainweb-node --config-file config.yaml |
        { sed -u -e '/finished pruning databases/q0;/\[Error\]/q1;$q2'; x=$? ; killall -9 chainweb-node; } ||
        true
        exit $x

  # Validate Mainnet01 pact history
  #
  validate-pact-history:
    name: Validate pact history
    runs-on: ${{ github.event.*.os[0] }}
    steps:
    - name: Install non-Haskell dependencies (ubuntu)
      if: contains(matrix.os, 'ubuntu')
      run: sudo apt-get install -y expect
    - name: Install non-Haskell dependencies (macOS)
      if: contains(matrix.os, 'mac')
      run: brew install expect
    - name: install chainweb-node
      uses: larskuhtz/install-chainweb-action@master
      with:
        ghc_version: ${{ github.event.*.ghc_version[0] }}
        version: ${{ github.event.*.version[0] }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check chainweb-node installation
      run: chainweb-node --version
    - name: Sync chain database from S3
      run: aws s3 sync "$DB_SNAPSHOT_URI" db/0/rocksDb --delete --exclude=LOCK
    - name: Write chainweb-node configuration file
      run: |
        cat >> config.yaml <<EOF
          databaseDirectory: "db"
          chainweb:
            chainwebVersion: mainnet01
            validateHashesOnReplay: true
            p2p:
              peer:
                hostaddress:
                  hostname: localhost
                  port: 4445
              private: true
              ignoreBootstrapNodes: true
            transactionIndex:
              enabled: false
            headerStream: false
            mempoolP2p:
              enabled: false
            cuts:
              pruneChainDatabase: false
          logging:
            telemetryBackend:
              enabled: false
            backend:
              handle: stdout
              color: "True"
            logger:
              log_level: info
              policy: block
            filter:
              rules:
              - key: component
                value: init
                level: info
              default: warn
        EOF
    - name: Validate pact history
      timeout-minutes: 120
      run: |
        unbuffer chainweb-node --config-file config.yaml |
        { sed -u -e '/finished synchronizing Pact DBs/q0;/\[Error\]/q1;$q2'; x=$?; killall -9 chainweb-node; } ||
        true
        exit $x;
